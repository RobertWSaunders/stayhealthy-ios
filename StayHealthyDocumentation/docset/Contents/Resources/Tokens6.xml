<?xml version="1.0" encoding="UTF-8"?>
<Tokens version="1.0">
	<File path="Protocols/DataManagerProtocol.html">
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/intf/DataManagerProtocol</TokenIdentifier>
			<Abstract type="html">DataManagerProtocol declares methods that a StayHealthy data manager must implement so that they can perform data operations. Data operations include but are not limited to saving, deleting and updating records in the Core Data persistent store. The protocol also has all of the Core Data entity names as constants so the data managers have access to them.</Abstract>
			<DeclaredIn>DataManagerProtocol.h</DeclaredIn>
            
			
			<NodeRef refid="6"/>
		</Token>
		
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/intfm/DataManagerProtocol/saveItem:</TokenIdentifier>
			<Abstract type="html">Saves a business object to the Core Data persistent store. Handles the mapping from business object to Core Data object.</Abstract>
			<DeclaredIn>DataManagerProtocol.h</DeclaredIn>
			
			<Declaration>- (void)saveItem:(id)object</Declaration>
			<Parameters>
				<Parameter>
					<Name>object</Name>
					<Abstract type="html">Business object to be saved to the Core Data persistent store.</Abstract>
				</Parameter>
			</Parameters>
			
			<Anchor>//api/name/saveItem:</Anchor>
            <NodeRef refid="6"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/intfm/DataManagerProtocol/updateItem:</TokenIdentifier>
			<Abstract type="html">Updates a business object to the Core Data persistent store. Handles the mapping from business object to Core Data object.</Abstract>
			<DeclaredIn>DataManagerProtocol.h</DeclaredIn>
			
			<Declaration>- (void)updateItem:(id)object</Declaration>
			<Parameters>
				<Parameter>
					<Name>object</Name>
					<Abstract type="html">Business object to be updated in the Core Data persistent store.</Abstract>
				</Parameter>
			</Parameters>
			
			<Anchor>//api/name/updateItem:</Anchor>
            <NodeRef refid="6"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/intfm/DataManagerProtocol/deleteItem:</TokenIdentifier>
			<Abstract type="html">Deletes a object from the Core Data persistent store. Handles the mapping from business object to Core Data object.</Abstract>
			<DeclaredIn>DataManagerProtocol.h</DeclaredIn>
			
			<Declaration>- (void)deleteItem:(id)object</Declaration>
			<Parameters>
				<Parameter>
					<Name>object</Name>
					<Abstract type="html">Business object to be deleted in the Core Data persistent store.</Abstract>
				</Parameter>
			</Parameters>
			
			<Anchor>//api/name/deleteItem:</Anchor>
            <NodeRef refid="6"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/intfm/DataManagerProtocol/deleteItemById:</TokenIdentifier>
			<Abstract type="html">Deletes a object from the Core Data persistent store by its identifier. Handles the mapping from business object to Core Data object.</Abstract>
			<DeclaredIn>DataManagerProtocol.h</DeclaredIn>
			
			<Declaration>- (void)deleteItemById:(NSString *)objectIdentifier</Declaration>
			<Parameters>
				<Parameter>
					<Name>objectIdentifier</Name>
					<Abstract type="html">Business object to be deleted in the Core Data persistent store.</Abstract>
				</Parameter>
			</Parameters>
			
			<Anchor>//api/name/deleteItemById:</Anchor>
            <NodeRef refid="6"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/intfm/DataManagerProtocol/deleteAllItems</TokenIdentifier>
			<Abstract type="html">Deletes all items in the Core Data persistent store.</Abstract>
			<DeclaredIn>DataManagerProtocol.h</DeclaredIn>
			
			<Declaration>- (void)deleteAllItems</Declaration>
			
			
			<Anchor>//api/name/deleteAllItems</Anchor>
            <NodeRef refid="6"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/intfm/DataManagerProtocol/fetchItemByIdentifier:</TokenIdentifier>
			<Abstract type="html">Fetches a business object from the Core Data persistent store by it&apos;s identifier.</Abstract>
			<DeclaredIn>DataManagerProtocol.h</DeclaredIn>
			
			<Declaration>- (id)fetchItemByIdentifier:(NSString *)objectIdentifier</Declaration>
			<Parameters>
				<Parameter>
					<Name>objectIdentifier</Name>
					<Abstract type="html">The identifier to look for.</Abstract>
				</Parameter>
			</Parameters>
			<ReturnValue><Abstract type="html">A business object with the identifier equal to objectIdentifier, only if can be found.</Abstract></ReturnValue>
			<Anchor>//api/name/fetchItemByIdentifier:</Anchor>
            <NodeRef refid="6"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/intfm/DataManagerProtocol/fetchAllRecords</TokenIdentifier>
			<Abstract type="html">Fetches all of the records in the table.</Abstract>
			<DeclaredIn>DataManagerProtocol.h</DeclaredIn>
			
			<Declaration>- (NSArray *)fetchAllRecords</Declaration>
			
			<ReturnValue><Abstract type="html">All records in the table.</Abstract></ReturnValue>
			<Anchor>//api/name/fetchAllRecords</Anchor>
            <NodeRef refid="6"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/intfm/DataManagerProtocol/returnEntityName</TokenIdentifier>
			<Abstract type="html">Returns the entity name for the given data manager.</Abstract>
			<DeclaredIn>DataManagerProtocol.h</DeclaredIn>
			
			<Declaration>- (NSString *)returnEntityName</Declaration>
			
			<ReturnValue><Abstract type="html">The entity name.</Abstract></ReturnValue>
			<Anchor>//api/name/returnEntityName</Anchor>
            <NodeRef refid="6"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/intfm/DataManagerProtocol/getTableCount</TokenIdentifier>
			<Abstract type="html">Returns the count of all of the items in the table.</Abstract>
			<DeclaredIn>DataManagerProtocol.h</DeclaredIn>
			
			<Declaration>- (NSUInteger)getTableCount</Declaration>
			
			<ReturnValue><Abstract type="html">Count of all items in the table inside of the database.</Abstract></ReturnValue>
			<Anchor>//api/name/getTableCount</Anchor>
            <NodeRef refid="6"/>
		</Token>
		
        
        
	</File>
</Tokens>